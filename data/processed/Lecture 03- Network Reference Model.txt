Page 0
Fondamenti di Internet
Network Reference Model

Foreword
¢ Inthe digital era, various information is presented as data in our life. What is data? How is data
transmitted?
¢ In this course, we will use the network reference model to understand the "life" of data.
Page 1 Copyright © 2020 Huawei Technologies Co., Ltd. All rights reserved. v

) Objectives
¢ On completion of this course, you will be able to:
Oo Understand the data definition and transmission process.
Oo Understand the concepts and advantages of the network reference model.
Oo Understand common standard protocols.
Oo Understand the data encapsulation and decapsulation processes.
Page 2 Copyright © 2020 Huawei Technologies Co., Ltd. All rights reserved.

) Contents
1. Applications and Data
2. Network Reference Model and Standard Protocols
3. Data Communication Process
Page 3 Copyright © 2020 Huawei Technologies Co., Ltd. All rights reserved.

) Origin of the Story - Applications
¢ Applications are used to meet various requirements of people, such as web page access, online
gaming, and online video playback.
¢ Information is generated along with applications. Texts, pictures, and videos are all information
presentation modes.
la
 
@.
You
Application
 
— [®
 
i,
 
“& Tube
a a
A (2)
Information
Page 4 Copyright © 2020 Huawei Technologies Co., Ltd. All rights reserved.

Application Implementation - Data
¢ Data generation
oO In the computer field, data is the carrier of all kinds of information.
¢ Data transmission
Oo Data generated by most applications needs to be transmitted between devices.
a. é _
Goa Does an application
Data need to complete the
entire process from
Network P .
data generation to
A,
fs, data transmission?
“ee se
Page 5 Copyright © 2020 Huawei Technologies Co., Ltd. All rights reserved.
A computer can identify only digital data consisting of Os and 1s. It is incapable of reading other
types of information, so the information needs to be translated into data by certain rules.
However, people do not have the capability of reading electronic data. Therefore, data needs to
be converted into information that can be understood by people.
A network engineer needs to pay more attention to the end-to-end data transmission process.

) Contents
1. Applications and Data
2. Network Reference Model and Standard Protocols
3. Data Communication Process
Page 6 Copyright © 2020 Huawei Technologies Co., Ltd. All rights reserved.

@) >) Transfer modes
A network transfer mode specifies how data are transferred from source to destination through a
network made up of links and nodes. Therefore, to describe a transfer mode, it is necessary to specify:
how data traverses nodes and are forwarded to destination (switching).
how and when data can be transmitted through the branches (multiplexing techniques).
how the entities in the network interact by making use of the links that interconnect them, ie the
communication rules (protocol architecture).
protocols
multiplexing
switching
Page 7

Ga) ) Switching
For a node of the network, the switching technique determines how a content, received through an
input interface to the node, connected to an input link, is sent to one or more output interfaces,
connected to the output links.
input output
The switching technique is realized through the routing and forwarding functions
Page 8

) ) Switching
Page 9 Lh

) ) Circuit Switching
. i Propagazione
a NS Trasmissione
Elaborazione
>» CIRCUIT SETUP
» DATA TRANSFER
Instaurazione
- Off-hook
» CIRCUIT TEAR-DOWN
Ritardo
end-to-end
End-to-end pre-allocation of a physical
communication circuit
Dati
On-hook ---}--
Svincolo
om- pean
Page 10

packet Switching
Information Unit (IU)
Header | Payload
store&forward of Information Units
Possible loss of lus and other issues
Page 11
Lg .
| — Propagazione
+—Trasmissione
|- Elaborazione
— Attesa
X Y Z
i 4 joy Fj E
Z = = = A
Spazio
De.
at
es al
i)
Cc
2
€
(ese «
LITT A/f, s
aly s
ee pit, xs)
8
=
5 ee
a
E hs
£ —_—7
v

) ) Multiplexing
e Sharing of link transfer capacity
xGEs
1 link, n channels
Multiplexing
xCeme
n Output
lines
Page 12
12

on " Frequency Division Multiplexing
Input
lines
es
Modulator
Carrier f,
SD
 
I
Modulator
Carrier f,
Baseband
Page 13 analog signals
Modulator
Carrier fz
PELELEL EL ELE EL ELE
xceEemo
PUNTAML
Output
lines
13

Page 14
) ) Wavelength Division Multiplexing
Spetto del segnale
ottico in uscita
My jann
f.o.>, 3
r
Spetto del segnale
ottico in ingresso
M Daan Ne
A . f.o.
ho wf’ ON
f.o.
vA
x 4 paral,
My he ha,ha
AVIAN,
Nn
|
 
Demultiplexer
 
|
|
 
Multiplexer
 
|

Time Division Multiplexing - syncronous
T T T T
T/3
te c1;,B1;A1
Frame 3 Frame 2 Frame 1
Each frame is 3 time slots.
Each time slot duration is T/3 s.
Page 15

Time Division Multiplexing - asyncronous
Data flow
|
Synchronous TDM does not guarantee that the full capacity of a link is used. Because the time slots are pre-
assigned, whenever a connected device is not transmitting, the corresponding slot is empty. Asynchronous time
division multiplexing, or statistical time division multiplexing, is designed to avoid this kind of waste.
Page 16

Protocol Architecture
Protocol: set of rules and methods of implementation of a function or group of functions.
Communication protocol: set of rules that define the methods of interaction between systems.
Protocol Architecture: describes the stratification of the communication functions and establishes their allocation to
the network equipment.
cl 3
i a
Tramsmitter Receiver
application! 4 application
I I
layern I 1 layer n
I 1
layer n-1 1 ' layer n-1
I 1
layer 1 ; I layer 1
1
~~ =txmedia
Page 17

OSI Reference Model - Example
Page 18
Session
Trasport
°=
y =a,

) ) OSI Reference Model
7. Application Layer Provides interfaces for applications.
Translates data formats to ensure that the application-layer data of one system can
6. Presentation Layer be identified by the application layer of another system.
5. Session Layer Establishes, manages, and terminates sessions between communicating parties.
Establishes, maintains, and cancels an end-to-end data transmission process;
4. Transport Layer ws .
p y controls transmission speeds and adjusts data sequences.
3. Network Layer Defines logical addresses and transfers data from sources to destinations.
Encapsulates packets into frames, transmits frames in P2P or P2MP mode, and
2. Data Link Layer implements error checking.
Transmits bitstreams over transmission media and defines electrical and physical
1. Physical Layer specifications.
Page 19 Copyright © 2020 Huawei Technologies Co., Ltd. All rights reserved.
e The Open Systems Interconnection Model (OSI) was included in the ISO 7489 standard and
released in 1984. ISO stands for International Organization for Standardization.
e The OSI reference model is also called the seven-layer model. The seven layers from bottom to
top are as follows:
2 Physical layer: transmits bit flows between devices and defines physical specifications such
as electrical levels, speeds, and cable pins.
2 Data link layer: encapsulates bits into octets and octets into frames, uses MAC addresses to
access media, and implements error checking.
o Network layer: defines logical addresses for routers to determine paths and transmits data
from source networks to destination networks.
2 Transport layer: implements connection-oriented and non-connection-oriented data
transmission, as well as error checking before retransmission.
= Session layer: establishes, manages, and terminates sessions between entities at the
presentation layer. Communication at this layer is implemented through service requests
and responses transmitted between applications on different devices.
2 Presentation layer: provides data encoding and conversion so that data sent by the
application layer of one system can be identified by the application layer of another system.
2 Application layer: provides network services for applications and the OSI layer closest to
end users.

Formal definition of the protocol architecture
Sistema A
Sistema B
a. a
(N + 1)-SAP (N + 1)-SAP
i
[we N + 1)-protocoll
(N + 1)-strato | (N+ 1)-entita adnan TRON soso (N + 1)-entita
\= —_>
N-SAP N-SAP
F
N-protocollo
N-strato N-entita “< ee > N-entita
L
(N — 1)-SAP (N — 1)-SAP
Page 20 (N — 1)-connessione
e Examples of SAPs are the type field in the Medium Access Control (MAC) protocol, the address
field in HDLC, the protocol field in the IP network header, and the port identifier in UDP and TCP.

) ) Protocol Architecture
 
— Information Units
e Each layer manages Information Units, also referred to as PDU (Protocol Data
Unit). Thet include a payload to betransferred (SDU, Service Data Unit) anda
header (PCI, Protocol Control Information)
e APDU ofa layer is encapsulated as a PDU of the lower layer
(N+1)-PDU |
3 (N)-SAP
(N)-SDU |
j
| | (N)-PCI |
Page 21 |
(N)-PDU |

Protocol Architecture — global view
Sistema A Sistema B
(N+ 1)-SAP —
i | | (N + 1)-PDU i
N+ 1)-entita [aag-------- b-------------------- $--------------------------- -enti
| ean “ 1 (N + 1)-protocollo peer-to-peer >| ws tends |
4 : : 4
! !
| | N-SDU
—@— n-sap ———_ —4>_
N-primitive ; N-primitive
1 1
¥ LW-PCI | | N-PDU
| N-entita ~<J Stes Sone Sted Se tone seas Senseo nsec ene essen eee es eee Seeee Be N-entita |
N-protocollo peer-to-peer
4
L
(N -—1 )-SAP —

Page 23
) ) Protocol Architecture
 
— IU size inflation
1 4
e [J
—"]
?
] Informazioni
nl utente
[P-H | ] P-PDU
[=HTP-H] S-PDU
[T-H [S-HTP-H J | T-PDU
LN-H [ T-H | S-H [| P-H | ] N-PDU
[DL-H
 
| N-H | T-H | S-H | P-H ] [DL-T ] DL-PDU

TCP/IP Reference Model
¢ The OSI protocol stack is complex, and the TCP and IP protocols are widely used in the industry.
Therefore, the TCP/IP reference model becomes the mainstream reference model of the
Internet.
Ah eee Application Layer... >
Application Layer eee Presentation Layer gsc ceccce > Application Layer
tees Session Layer ooo
 
ce aees >
Host-to-Host Layer hte Transport Layer coc eceeees > Transport Layer
Internet Layer eee Network Layer so vaccunennen > Network Layer
od} teens Data Link Layer eaececenees > Data Link Layer
Network Access Layer
de eee Physical Layer = canununenes > Physical Layer
Standard TCP/IP model OSI model Equivalent TCP/IP model
Page 24 Copyright © 2020 Huawei Technologies Co., Ltd. All rights reserved.
e The TCP/IP model is similar to the OSI model in structure and adopts a hierarchical architecture.
Adjacent TCP/IP layers are closely related.
e The standard TCP/IP model combines the data link layer and physical layer in the OSI model into
the network access layer. This division mode is contrary to the actual protocol formulation.
Therefore, the equivalent TCP/IP model that integrates the TCP/IP standard model and the OSI
model is proposed. Contents in the following slides are based on the equivalent TCP/IP model.

[=] ) Common TCP/IP Protocols
¢ The TCP/IP protocol stack defines a series of standard protocols.
Telnet FTP TFTP SNMP
Application Layer
HTTP SMTP DNS DHCP
Transport Layer TCP UDP
ICMP IGMP
Network Layer
IP
PPPoE
Data Link Layer
Ethernet PPP
Physical Layer
Page 25 Copyright © 2020 Huawei Technologies Co., Ltd. All rights reserved.
e Application Layer
e Hypertext Transfer Protocol (HTTP): is used to access various pages on web servers.
e File Transfer Protocol (FTP): provides a method for transferring files. It allows data to be
transferred from one host to another.
¢ Domain name service (DNS): translates from host domain names to IP addresses.
e Transport layer
= Transmission Control Protocol (TCP): provides reliable connection-oriented communication
services for applications. Currently, TCP is used by many popular applications.
e User Datagram Protocol (UDP): provides connectionless communication and does not
guarantee the reliability of packet transmission. The reliability can be ensured by the
application layer.
e Network layer
= Internet Protocol (IP): encapsulates transport-layer data into data packets and forwards
packets from source sites to destination sites. IP provides a connectionless and unreliable
service.
o Internet Group Management Protocol (IGMP): manages multicast group memberships.
Specifically, IGMP sets up and maintains memberships between IP hosts and their directly
connected multicast routers.
2 Internet Control Message Protocol (ICMP): sends control messages based on the IP protocol
and provides information about various problems that may exist in the communication
environment. Such information helps administrators diagnose problems and take proper
measures to resolve the problems.
e Data link layer

a
Point-to-Point Protocol (PPP): is a data link layer protocol that works in point-to-
point mode. PPP is mainly used on wide area networks (WANs).
Ethernet: is a multi-access and broadcast protocol at the data link layer, which is
the most widely used local area network (LAN) technology.
Point-to-Point Protocol over Ethernet (PPPoE): connects multiple hosts on a
network to a remote access concentrator through a simple bridge device (access
device). Common applications include home broadband dialup access.

)>) Common Protocol Standardization Organizations
¢ Internet Engineering Task Force (IETF)
Oo IETF is a voluntary organization responsible for developing and promoting Internet protocols (especially protocols that
constitute the TCP/IP protocol suite), and releasing new or replacing old protocol standards through RFCs.
¢ Institute of Electrical and Electronics Engineers (IEEE)
Oo IEEE has formulated about 30% of standards in the electronics, electrical, and computer science fields worldwide. Those
standards include well-known IEEE802.3 (Ethernet) and IEEE802.11 (Wi-Fi).
¢ International Organization for Standardization (ISO)
O {SO is an international organization that plays an important role in the formulation of computer network standards, such as the
OSI model defined in ISO/IEC 7498-1.
Page 26 Copyright © 2020 Huawei Technologies Co., Ltd. All rights reserved.

Transport Network Data Link Physical
Layer Layer Layer Layer Layer
*. *.
) ) Application Layer
Application
Layer
(Data)
Transport Layer
Network Layer
Data Link Layer
Physical Layer
Page 27
* The application layer provides interfaces for application software so that applications can use network services. The
application layer protocol designates transport layer protocols and ports.
* PDUs transmitted at the network layer are called data.
HTTP 80 (TCP) (HTTPS 443)
Hypertext transfer protocol, which provides web browsing services.
Telnet 23 (TCP)
Remote login protocol, which provides remote management services.
FTP 20 and 21 {TCP)
File transfer protocol, which provides Internet file resource sharing services.
SMTP 25 (TCP)
Simple mail transfer protocol, which provides Internet email services.
TFTP 69 (UDP)
Simple file transfer protocol, which provides simple file transfer services.
e The TCP/IP suite enables data to be transmitted over a network. The layers use packet data units
(PDUs) to exchange data, implementing communication between network devices.
e PDUs transmitted at different layers contain different information. Therefore, PDUs have
different names at different layers.

Application Transport Network Data Link Physical
Layer Layer Layer Layer Layer
>) Common Application Layer Protocols - FTP
¢ The File Transfer Protocol (FTP) transfers files from one host to another to implement file download and
upload. This protocol adopts the client/server (C/S) structure.
eS a Le) oe eo ee
FTP client: provides commands for local users to
operate files on a remote server. A user can install an
FTP client program on a PC and set up a connection
with an FTP server to operate files on the server.
Page 28 Copyright © 2020 Huawei Technologies Co., Ltd. All rights reserved.
FTP server
Network ca
FTP server: a device that runs the FTP service. It
provides the access and operation functions for
remote clients, allowing users to access the FTP
server through the FTP client program and access
files on the server.

Application Transport Network Data Link Physical
Layer Layer Layer Layer Layer
>) Common Application Layer Protocols - Telnet
¢ Telnet is a standard protocol that provides remote login services on a network. It provides users with the
ability to operate remote devices through local PCs.
Telnet server
(2)
Telnet connection (cy) A user connects to a Telnet server through
AP
i Router
the Telnet client program. The commands
= —
lj, Network Ss, ES entered on the Telnet client are executed
Sty bilevel on the server, as if the commands were
go0 entered on the console of the server.
Telnet client
Page 29 Copyright © 2020 Huawei Technologies Co., Ltd. All rights reserved.

Application Transport Network Data Link Physical
Layer Layer Layer Layer Layer
[=] Common Application Layer Protocols - HTTP
¢ Hypertext Transfer Protocol (HTTP): is one of the most widely used network protocols on the Internet.
HTTP was originally designed to provide a method for publishing and receiving HTML pages.
B Network a
HTTP client HTTP server
I 7 . I
Visits www.huawei.com. .
mmm >I
I Returns the HTML file of the page I
i< — i
Page 30 Copyright © 2020 Huawei Technologies Co., Ltd. All rights reserved.

— Network Data Link Physical
Layer Layer Layer Layer Layer
2!) Transport Layer
¢ A transport layer protocol receives data from an application layer protocol, encapsulates the data with
the corresponding transport layer protocol header, and helps establish an end-to-end (port-to-port)
connection.
PDUs transmitted at the transport layer are called segments.
Application Layer
Transport layer protocols:
Transport TCP: a connection-oriented reliable
Layer » protocol defined by IETF in RFC 793.
(Segment) UDP: a simple connectionless protocol
Network Layer defined by IETF in RFC 768.
Data Link Layer
Physical Layer
Page 31 Copyright © 2020 Huawei Technologies Co., Ltd. All rights reserved.

“@ | TCP and UDP - Port Numbers
Page 32
Web browser
HTTP application Telnet
I i
TCP port 1024 TCP port 1231
House number: 1.1.1.1 (IP address)
Data Link
HTTP server
HTTP application Telnet
TCP port 80 TCP port 23
A
HTTP client
Source IP address: 1.1.1.1
IP header
HTTP server
Source port number: 1024 HTTP
Destination port number: 80 Payload
TCP header
Generally, the source port used by a client is randomly allocated, and the destination port is specified by the application of a
server.
The system generally selects a source port number that is greater than 1023 and is not being used.
The destination port number is the listening port of the application (service) enabled on the server. For example, the default port
number for HTTP is 80.
Physical
Layer

TCP and UDP
 
- Header Formats ASO ooac
Page 33
Source Port (16) Destination Port (16)
Sequence Number (32)
Acknowledgement Number (32) TCP header
Header Reserved Control Window (16) 20 bytes
Length (4) (6) Bits (6)
Checksum (16) Urgent (16)
Options
Data (varies)
Source Port (16) Destination Port (16) UDP header
Length (16) Checksum (16) 8 bytes
Data (if any)
e TCP header:
a
a
Source Port: identifies the application that sends the segment. This field is 16 bits long.
Destination Port: identifies the application that receives the segment. This field is 16 bits
long.
Sequence Number: Every byte of data sent over a TCP connection has a sequence number.
The value of the Sequence Number field equals the sequence number of the first byte in a
sent segment. This field is 32 bits long.
Acknowledgment Number: indicates the sequence number of the next segment's first byte
that the receiver is expecting to receive. The value of this field is 1 plus the sequence
number of the last byte in the previous segment that is successfully received. This field is
valid only when the ACK flag is set. This field is 32 bits long.
Header Length: indicates the length of the TCP header. The unit is 32 bits (4 bytes). If there
is no option content, the value of this field is 5, indicating that the header contains 20
bytes.
Reserved: This field is reserved and must be set to 0. This field is 6 bits long.
Control Bits: control bits, includes FIN, ACK, and SYN flags, indicating TCP data segments in
different states.
Window: used for TCP flow control. The value is the maximum number of bytes that are
allowed by the receiver. The maximum window size is 65535 bytes. This field is 16 bits long.
Checksum: a mandatory field. It is calculated and stored by the sender and verified by the
receiver. During checksum computation, the TCP header and TCP data are included, anda
12-byte pseudo header is added before the TCP segment. This field is 16 bits long.
Urgent: indicates the urgent pointer. The urgent pointer is valid only when the URG flag is
set. The Urgent field indicates that the sender transmits data in emergency mode. The

urgent pointer indicates the number of urgent data bytes in a segment (urgent
data is placed at the beginning of the segment). This field is 16 bits long.
= Options: This field is optional. This field is 0 to 40 bytes long.
e UDP header:
2 Source Port: identifies the application that sends the segment. This field is 16 bits
long.
2 Destination Port: identifies the application that receives the segment. This field is
16 bits long.
= Length: specifies the total length of the UDP header and data. The possible
minimum length is 8 bytes because the UDP header already occupies 8 bytes. Due
to the existence of this field, the total length of a UDP segment does not exceed
65535 bytes (including an 8-byte header and 65527-byte data).
2 Checksum: checksum of the UDP header and UDP data. This field is 16 bits long.
e CWR (Congestion Window Reduced) - se impostato a 1 indica che I'host sorgente ha
ricevuto un segmento TCP con il flag ECE impostato a 1 (aggiunto all'header in RFC 3168).
e ECE [ECN (Explicit Congestion Notification) -Echo] - se impostato a 1 indica che l'host
supporta ECN durante il 3-way handshake (aggiunto all'header in RFC 3168).
e URG - se impostato a 1 indica che nel flusso sono presenti dati urgenti alla posizione
(offset) indicata dal campo Urgent pointer. Urgent Pointer punta alla fine dei dati urgenti;
e ACK - se impostato a 1 indica che il campo Acknowledgment number é valido;
e PSH - se impostato a 1 indica che i datiin arrivo non devono essere bufferizzati ma
passati subito ai livelli superiori dell'applicazione;
e RST -se impostato a 1 indica che la connessione non é valida; viene utilizzato in caso di
grave errore; a volte utilizzato insieme al flag ACK per la chiusura di una connessione.
e SYN -se impostato a 1 indica che l'host mittente del segmento vuole aprire una
connessione TCP con l'host destinatario e specifica nel campo Sequence number il valore
dell'Initial Sequence Number (/SN); ha lo scopo di sincronizzare i numeri di sequenza dei
due host. L'host che ha inviato il SYN deve attendere dall'host remoto un pacchetto
SYN/ACK.
e FIN -se impostato a 1 indica che I'host mittente del segmento vuole chiudere la
connessione TCP aperta con I'host destinatario. II mittente attende la conferma dal

ricevente (con un FIN-ACK). A questo punto la connessione é ritenuta chiusa per meta:
I'host che ha inviato FIN non potra piu inviare dati, mentre l'altro host ha il canale di
comunicazione ancora disponibile. Quando anche I'altro host inviera il pacchetto con FIN
impostato, la connessione, dopo il relativo FIN-ACK, sara considerata completamente
chiusa.
Managing Congestion
Enter RFC2481 “A Proposal to Add Explicit Congestion Notification (ECN) to IP” which was
superseded by RFC3168 with the same name. To assist in notifying the end-points,
changes were made to the TCP and IP headers. First, two one-bit flags were added to the
reserved field of the TCP header: bit 8 (CWR — Congestion Window Reduced) and bit 9
(ECE — ECN-Echo). Lastly, two flags were changed in the IP header in the differentiated
services field: bit 14 (ECT — ECN Capable Transport) and 15 (CE — Congestion
Experienced).
So how does it work? To accomplish this, the sender sends a SYN packet with the ECE
and CWR flags set, and the receiver sends back the SYN-ACK with only the ECE flag set.
Any other configuration indicates a non-ECN setup. Assuming an ECN-aware network, an
oversimplification of the control process looks like this: when a router detects
congestion, rather than dropping packets destined to a receiver, it marks them with the
CE flag in the IP header and delivers the packet to the receiver. Prior to acknowledging
the receipt of the packet, the receiver sets the ECE flag in the TCP header of the ACK and
sends it back to the sender. The sender having received the ECE marked ACK responds by
halving the send window and reducing the slow start threshold.

handshake. PCL
1.1.1.1:1024 “=
==
IP header
Source = 1.1.1.1
“= Destination=2.2.2.2
—_ Source = 1.1.1.1
Destination=2.2.2.2
TCP header
Seqz=a Ack=0
(Flags: SYN is set.) —>
Source = 2.2.2.2
Destination=1.1.1.1
Seqza+1 Ack=b+1
q ——>
(Flags: ACK is set.)
Page 34
A TCP connection is established.
Data Link
Layer
Network
Layer
Physical
Layer
Application Transport
Layer Layer
TCP Connection Setup - Three-Way Handshake
¢ Before sending data, a TCP-based application needs to establish a connection through three-way
Cis
meee 2.2.2.2:23
Seq=b Ack=a+1
(Flags: SYN is set, and ACK is ==:
set.)
The TCP connection setup process is as follows:
e= The TCP connection initiator (PC1 in the figure) sends the first TCP segment with SYN being
set. The initial sequence number a is a randomly generated number. The acknowledgment
number is 0 because no segment has ever been received from PC2.
o After receiving a valid TCP segment with the SYN flag being set, the receiver (PC2) replies
with a TCP segment with SYN and ACK being set. The initial sequence number bis a
randomly generated number. Because the segment is a response one to PC1, the
acknowledgment number is a+1.
o After receiving the TCP segment in which SYN and ACK are set, PC1 replies with a segment
in which ACK is set, the sequence number is a+1, and the acknowledgment number is b+1.
After PC2 receives the segment, a TCP connection is established.

Number
TCP Sequence Number and Acknoaietemen oe
¢ TCP uses the Sequence Number and Acknowledgment Number fields to implement reliable and
ordered data transmission.
PC1 Ik Ir PC2
1.1.1.1:1024 “=== = 2.2.2.2:23
_ ATCP connection is
3 ~ established.
6 IP header TCP header
Source = 1.1.1.1 Seq=at1 Payload
Destination = 2.2.2.2 Ack=b+1 Length = 12 bytes
4 Source = 2.2.2.2 Seq=b+1 Payload
Destination = 1.1.1.1 Ack=at1+12 Length=Obytes TMTM:
Data to be sent on! Source = 1.1.1.1 Seq=at+13 Payload >
Destination = 2.2.2.2 Ack=b+1 Length = 66 bytes Question: Why does the value
of the Acknowledgment
_ = Number field in the segment
+ Source = 2.2.2.2 Seq=bt+1 Payload
Destination =1.1.1.1 Ack=at+12+66 Length=Obytes ~ sent by PC1 not increase?
Page 35 Copyright © 2020 Huawei Technologies Co., Ltd. All rights reserved.
e Assume that PC1 needs to send segments of data to PC2. The transmission process is as follows:
1.
PC1 numbers each byte to be sent by TCP. Assume that the number of the first byte is a+1.
Then, the number of the second byte is a+2, the number of the third byte is a+3, and so
on.
PC1 uses the number of the first byte of each segment of data as the sequence number
and sends out the TCP segment.
After receiving the TCP segment from PC1, PC2 needs to acknowledge the segment and
request the next segment of data. How is the next segment of data determined? Sequence
number (a+1) + Payload length = Sequence number of the first byte of the next segment
(a+1+12)
After receiving the TCP segment sent by PC2, PC1 finds that the acknowledgment number
is at+1+12, indicating that the segments from at+1 to a+12 have been received and the
sequence number of the upcoming segment to be sent should be a+1+12.
¢ To improve the sending efficiency, multiple segments of data can be sent at a time by the sender
and then acknowledged at a time by the receiver.

TCP Window Sliding Mechanism
¢ TCP uses the sliding window mechanism to control the data transmission rate.
PC1 Ci Ci PC2
Buffer of the receiver
ra) -: seq=100 win=3 flags=SYN
Three-way _] seq=200 Ack=101 win=3 flags=SYN,ACK
handshake
seq=101 Ack=201 win=3 flags=ACK
Data to be sent
2) [ : seq=101 win=3
Data 4: seq=102 win=3 : = 3)
transmission seq=103 win=3 > Y | |
: alee Question: Why does the
. Ack=104 win=1 ctl=ACK rT | ai ee tte
5 ] seq=104 win=3 - remain unchanged?
Page 36 Copyright © 2020 Huawei Technologies Co., Ltd. All rights reserved.
1. During the TCP three-way handshake, both ends notify each other of the maximum number of
bytes (buffer size) that can be received by the local end through the Window field.
2. After the TCP connection is set up, the sender sends data of the specified number of bytes based
on the window size declared by the receiver.
3. After receiving the data, the receiver stores the data in the buffer and waits for the upper-layer
application to obtain the buffered data. After the data is obtained by the upper-layer application,
the corresponding buffer space is released.
4. The receiver notifies the current acceptable data size (window) according to its buffer size.
5. The sender sends a certain amount of data based on the current window size of the receiver.

) ) TCP Flow Control
Host A length 1024 Server A
wi
j= length 1904 ow 4096
|; stdow 4096
ack 2049 window
| data from TCP application
ength 1024 IP ; ae "process
in buffer
wi
4+
 
__ RevBuffer —————
F 2048 . .
ack 4097 window receiver buffering
wi
length 1024 sow 4096
The TCP window field provides a means of flow control that governs the amount of data sent by
the sender. This is achieved by returning a "window" with every TCP segment for which the ACK
field is set, indicating a range of acceptable sequence numbers beyond the last segment
successfully received. The window indicates the permitted number of octets that the sender may
transmit before receiving further permission.
In the example, TCP transmission from host A to server A contains the current window size for
host A. The window size for server A is determined as part of the handshake, which based on the
transmission can be assumed as 2048. Once data equivalent to the window size has been
received, an acknowledgement will be returned, relative to the number of bytes received, plus
one. Following this, host A will proceed to transmit the next batch of data.
A TCP window size of 0 will effectively deny processing of segments, with exception to segments
where the ACK, RST and URG code bits are set for incoming segments. Where a window size of 0
exists, the sender must still periodically check the window size status of receiving TCP to ensure
any change in the window size is effectively reported, the period for retransmission is generally
two minutes. When a sender sends periodic segments, the receiving TCP must still acknowledge
with a sequence number announcement of the current window size of 0.

TCP Round Trip Delay e Timeout (1/2)
¢ How to estimate RTD ?
¢ To sample the Round Trip Delay (SampleRTD): time from segment transmission to ack reception
Oo Pay attention to retransmission and cumulative acks
e Estimation of the sampleRTD mean

TCP Round Trip Delay e Timeout (2/2)
EstimatedRTD = (1-x)*EstimatedRTD + x*SampleRTD
¢ Typical x values in the range 0.1 - 0.125
Timeout = EstimatedRTD + 4*Deviation
¢ Deviation = (1-x)*Deviation +x* |SampleRTD-EstimatedRTD
 
|

TCP transmission rate
¢ Two processes determine:
4 Congestion Control (Congwin)
> TrWindow bytes can be sent during 1 RTD >

A) ) Congestion Control
The transmission rate il determined by the TrWindow size. Assume
TrWindow=Congwin < RevWindow:
nextseqnum
send_base re} already
ack’ed
UH 000000008 | i.
window size
N
Congwin
|
|
usable, not
yet sent
not usable

) ) Congestion Control
¢ A time-out event is considered due to a congestion event
¢ Algorithms used in differnet TCP versions:
O Slow start +Congestion avoidance
Oo Fast restransmit + Fast recovery
“Test” the network to discover the usable bandwidth
¢ Two main phases
O slow start
Oo congestion avoidance
Used varaibles:
o Congwin
o threshold: between slow start phase and congestion control phase

TCP Slowstart
Slowstart Algorithm
Exponential growth of the window size for each
RTD
Loss event: timeout (Tahoe TCP) and/or 3
duplicated ACKs (Reno TCP)
Bd rost A
«RTD
4 segment;
Host B ie
| teamento |
——
time

TCP Congestion Avoidance
Congestion avoidance
12
11
10
9
threshold
 
_a d
ToT
 
T
 
T
 
TT
 
TT
 
TT
 
TT
 
TT
Congestion
 
window
 
(Gn
 
segments)
Ye
 
NwWAHU
 
DH
 
>A
| | | | | | | | J | | J | 41
012345
 
67 8 9 1011121314
Number of transmissions
The TCP Reno does not use slowstart (fast recovery) in case of 3
duplicated ACKs: fast retransmit => start the procedure before

TCP Shutdown - Four-Way Handshake
¢ After data transmission is complete, TCP needs to use the four-way handshake mechanism to disconnect the TCP
connection and release system resources.
Pci f= T= pc2
1.1.1.1:1024 hi L_] 2.2.2.2:23
ATCP connection is _—
< established.
« TCP segment
~ exchange i?
IP header TCP header
e Sends a _ Source = 1.1.1.1 Seq=101 Ack=301
connection Destination = 2.2.2.2 (Flags: FIN is set, and ACK is set.)
teardown
request with FIN
being set. Source = 2.2.2.2 Seq=301 Ack=102 w= Sends ACK. 6
Destination = 1.1.1.1 (Flags: ACK is set.)
Source = 2.2.2.2 Seq=301 Ack=102 i Sends a 3)
Destination = 1.1.1.1 (Flags: FIN is set, and ACK is set.) connection
teardown
request with FIN
Source = 1.1.1.1 Seq=102 Ack=302 being set.
Sends ACK. — ———
 
>
4) Destination = 2.2.2.2 (Flags: ACK is set.)
4 The TCP connection is bs
torn down.
Page 45 Copyright © 2020 Huawei Technologies Co., Ltd. All rights reserved.
TCP supports data transmission in full-duplex mode, which means that data can be transmitted in
both directions at the same time. Before data is transmitted, TCP sets up a connection in both
directions through three-way handshake. Therefore, after data transmission is complete, the
connection must be closed in both directions. This is shown in the figure.
1. PC1 sends a TCP segment with FIN being set. The segment does not carry data.
2. After receiving the TCP segment from PC1, PC2 replies with a TCP segment with ACK being
set.
3. PC2 checks whether data needs to be sent. If so, PC2 sends the data, and then a TCP
segment with FIN being set to close the connection. Otherwise, PC2 directly sends a TCP
segment with FIN being set.
4. After receiving the TCP segment with FIN being set, PC1 replies with an ACK segment. The
TCP connection is then torn down in both directions.

Application Transport Network Data Link Physical
) Layer Layer Layer Layer Layer
¢ The transport layer is responsible for establishing connections between processes on hosts, and the
network layer is responsible for transmitting data from one host to another.
¢ PDUs transmitted at the network layer are called packets.
Application Layer
Transport Layer
¢ The network layer is also called the Internet layer.
It sends packets from source hosts to destination
hosts.
Network Layer
(Packet) »
¢ Functions of the network layer:
Provides logical addresses for network devices.
Data Link Layer Routes and forwards data packets.
Common network layer protocols include IPv4, IPv6,
Physical Layer ICMP, and IGMP.
Page 46 Copyright © 2020 Huawei Technologies Co., Ltd. All rights reserved.
e Internet Protocol Version 4 (IPv4) is the most widely used network layer protocol.

Application Transport Network Data Link Physical
Layer Layer Layer Layer Layer
@) >) Working Process of a Network Layer Protocol
Letter: data sent by an upper layer (for example,
the transport layer)
Router 1
ij _ & a & G0/0/0 &
PC1 G0/0/1
—s Bm = PC2
w% ==
—_—_—_ The PC encapsulates the IP header (envelope). & , & ——> | li
—— = The key information is about source and a),
ED —
destination IP addresses. Network A
Routing table of Router 1 * The network layer header of a packet sent by a source device
carries the network layer addresses of the source and
Network Outbound destination devices.
etwor Interface * Each network device (such as a router) that has the routing
function maintains a routing table (like a map of the network
Network A G0/0/1 device).
Envelope: IP packet header « After receiving a packet, the network device reads the
Sender: source IP address on on network layer destination address of the packet, searches
Receiver: destination IP address the routing table for the matching entry of the destination
address, and forwards the packet according to the instruction
of the matching entry.
Page 47
e When IP is used as the network layer protocol, both communication parties are assigned a unique
IP address to identify themselves. An IP address can be written as a 32-bit binary integer. To
facilitate reading and analysis, an IP address is usually represented in dot-decimal notation,
consisting of four decimal numbers, each ranging from 0 to 255, separated by dots, such as,
192.168.1.1.
e Encapsulation and forwarding of IP data packets:
> When receiving data from an upper layer (such as the transport layer), the network layer
encapsulates an IP packet header and adds the source and destination IP addresses to the
header.
e Each intermediate network device (such as a router) maintains a routing table that guides
IP packet forwarding like a map. After receiving a packet, the intermediate network device
reads the destination address of the packet, searches the local routing table for a matching
entry, and forwards the IP packet according to the instruction of the matching entry.
2 When the IP packet reaches the destination host, the destination host determines whether
to accept the packet based on the destination IP address and then processes the packet
accordingly.
e When the IP protocol is running, routing protocols such as OSPF, IS-IS, and BGP are required to
help routers build routing tables, and ICMP is required to help control networks and diagnose
network status.

Application Transport Network Data Link Physical
Layer Layer Layer Layer Layer
>) Data Link Layer
¢ The data link layer is located between the network layer and the physical layer and provides services for
protocols such as IP and |IPv6 at the network layer. PDUs transmitted at the data link layer are called
frames.
Ethernet is the most common data link layer protocol.
Application Layer
Transport Layer
The data link layer is located between the network layer and the
Network Layer physical layer.
¢ The data link layer provides intra-segment communication
Data Link Layer » for the network layer.
(Frame)
¢ The functions of the data link layer include framing,
physical addressing, and error control.
Common data link layer protocols include Ethernet,
PPPoE, and PPP.
Physical Layer e
Page 48 Copyright © 2020 Huawei Technologies Co., Ltd. All rights reserved.

Switch A
Switch B
Ci Ci
Host A Host B
Network A Lik Lik
Host C Host D
e Ethernet is a broadcast multiple access protocol that works at
the data link layer protocol.
¢ The network interfaces of PCs comply with the Ethernet
standard.
* Generally, a broadcast domain corresponds to an IP network
segment.
Page 49
Application Transport Network Data Link Physical
Layer Layer Layer Layer Layer
Ethernet and Source MAC Addresses
Ethernet Definition Ethernet Source MAC Addresses
| have a MAC address
aa
when| leave the Name: Host A -
factory. |
— MAC address/Ethernet address/physical
L_|k address:
Host A
* Amedia access control (MAC) address uniquely identifies a NIC
ona network. Each NIC requires and has a unique MAC address.
* MAC addresses are used to locate specific physical devices in an
IP network segment.
* Adevice that works at the data link layer, such as an Ethernet
switch, maintains a MAC address table to guide data frame
forwarding.
e A MAC address is recognizable as six groups of two hexadecimal digits, separated by hyphens,
colons, or without a separator. Example: 48-A4-72-1C-8F-4F

Physical Layer
¢ After data arrives at the physical layer, the physical layer converts a digital signal into an optical signal, an electrical
Application Layer
Transport Layer
Network Layer
Data Link Layer
Physical Layer
(Bitstream)
>
Application Transport Network Data Link Physical
Layer Layer Layer Layer Layer
signal, or an electromagnetic wave signal based on the physical media.
¢ PDUs transmitted at the physical layer are called bitstreams.
The physical layer is at the bottom of the model.
Page 50 Copyright © 2020 Huawei Technologies Co., Ltd. All rights reserved.
This layer transmits bitstreams on media.
It standardizes physical features such as cables, pins, voltages,
and interfaces.
Common transmission media include twisted pairs, optical
fibers, and electromagnetic waves.

Application Transport Network Data Link Physical
Layer Layer Layer Layer Layer
) ) Common Transmission Media
Y b 2
E = —— Fiber Optical module
Twisted pair RJ45 connector
Data transmission through twisted pairs
a) C”r7 >)
Synchronous/asynchronous [| a L_] =
PAD
Data transmission through optical fibers
serial cable: V.24 on the left and
v.35 on the right Mobile phone Laptop Wireless router
Data transmission through serial cables Data Ta ete oi tslece one wireless
Page 51
e Twisted pairs: most common transmission media used on Ethernet networks. Twisted pairs can be
classified into the following types based on their anti-electromagnetic interference capabilities:
o STP: shielded twisted pairs
o UTP: unshielded twisted pairs
¢ Optical fiber transmission can be classified into the following types based on functional
components:
o Fibers: optical transmission media, which are glass fibers, used to restrict optical
transmission channels.
2 Optical modules: convert electrical signals into optical signals to generate optical signals.
e Serial cables are widely used on wide area networks (WANs). The types of interfaces connected to
serial cables vary according to WAN line types. The interfaces include synchronous/synchronous
serial interfaces, ATM interfaces, POS interfaces, and CE1/PRI interfaces.
e Wireless signals may be transmitted by using electromagnetic waves. For example, a wireless
router modulates data and sends the data by using electromagnetic waves, and a wireless
network interface card of a mobile terminal demodulates the electromagnetic waves to obtain
data. Data transmission from the wireless router to the mobile terminal is then complete.

) Contents
1. Applications and Data
2. Network Reference Model and Standard Protocols
3. Data Communication Process
Page 52 Copyright © 2020 Huawei Technologies Co., Ltd. All rights reserved.

[=] ) Data Encapsulation on the Sender
www.huawei.com DATA Application Layer Data
wane ene nee ee ne nnn nnn ee ne nee ne nen nee ee nen eee eee eee eee eee
 
:
 
ae
TCP Header DATA Transport Layer Segment
------------------------—- SSBB ----------------05--5--- Qrmon cron rere rene rncccnc ce necercccsccns
Network L Packet
IP Header Payload eworenever
----------------------- BBB ------------0-0--0000--
 
Agp-nnnn econo ne ccc concen ce concn c ec ec enc ece
i Frame
Eth Header Payload FCS Data Link Layer
wee ee ee ee eee ee ee ee ee ee ee ee eee ee ee ee ee ee ee ee ee ee ew ee ee ee ee ee ee eee ee rrr crc sencccces
Jf LE Ff LI Ly] we Physical Layer nw Bit
Transmission
Media
Page 53 Copyright © 2020 Huawei Technologies Co., Ltd. All rights reserved.
e Assume that you are using a web browser to access Huawei's official website. After you enter the
website address and press Enter, the following events occur on your computer:
1. The browser (application program) invokes HTTP (application layer protocol) to
encapsulate the application layer data. (The DATA in the figure should also include the
HTTP header, which is not shown here.)
2. HTTP uses TCP to ensure reliable data transmission and transmits encapsulated data to the
TCP module.
3. The TCP module adds the corresponding TCP header information (such as the source and
destination port numbers) to the data transmitted from the application layer. At the
transport layer, the PDU is called a segment.
4. Onan |IPv4 network, the TCP module sends the encapsulated segment to the IPv4 module
at the network layer. (On an IPv6 network, the segment is sent to the IPv6 module for
processing.)
5. After receiving the segment from the TCP module, the IPv4 module encapsulates the IPv4
header. At this layer, the PDU is called a packet.
o Ethernet is used as the data link layer protocol. Therefore, after the IPv4 module completes
encapsulation, it sends the packet to the Ethernet module (such as the Ethernet NIC) at the
data link layer for processing.
o After receiving the packet from the IPv4 module, the Ethernet module adds the
corresponding Ethernet header and FCS frame trailer to the packet. At this layer, the PDU is
called a frame.
o After the Ethernet module completes encapsulation, it sends the data to the physical layer.
2 Based on the physical media, the physical layer converts digital signals into electrical signals,
optical signals, or electromagnetic (wireless) signals.
2 The converted signals start to be transmitted on the network.

)>) Data Transmission on the Intermediate Network
¢ Encapsulated data is transmitted on the network.
Data
“$s &
_— >
Data
Application Layer Application Layer
Transport Layer Transport Layer
Network Layer Seevalis TeViet Network Layer
Data Link Layer Data Link Layer Data Link Layer Data Link Layer
Physical Layer Physical Layer Physical Layer Physical Layer
Page 54 Copyright © 2020 Huawei Technologies Co., Ltd. All rights reserved.
e In most cases:
c A Layer 2 device (such as an Ethernet switch) only decapsulates the Layer 2 header of the
data and performs the corresponding switching operation according to the information in
the Layer 2 header.
c A Layer 3 device (such as a router) decapsulates the Layer 3 header and performs routing
operations based on the Layer 3 header information.
c Note: The details and principles of switching and routing will be described in subsequent
courses.

@) >) Data Decapsulation on the Receiver
III III Application Layer DATA Data
Web server a»
Transport Layer oP weader DATA Segment
vN 1
Network Layer cade! Payload Packet
~ r
Data Link Layer “sh peadet Payload FCs Frame
Physical Layer | eusens Bit
Transmission S- 0 1 1 0 0 1 0 1 ft) 1
Media
e After being transmitted over the intermediate network, the data finally reaches the destination
server. Based on the information in different protocol headers, the data is decapsulated layer by
layer, processed, transmitted, and finally sent to the application on the web server for processing.

Slow Protocol Frame Format
) S | e | SByte Byte Byte Byte IBytelByte 47~110Byte 4Byte
Destination Source | Ete
Preamble | MAC address ¥
0180:<200:0002 |
 
MAC address |
Data
(ILY)
Sub LACH
hs FCS
LACP Data Field Format
TLV #1 Actor Information
Type | Length | Value
Foe (panes || Asie ‘Actor ‘Actor | Actor | Actor [Actor] Reserved
(Actor | 20byt2) | csstem System Key State] =0x000
Info) Priority | =Actor
 
MAC address | =2 Ox3
=3976
IByte_IByte 2Byte Byte Byte IByte SByte
TLV #2 Partner Information
Type | Length | Value
ee? | SIs || Paces Partner Partner | Partner | Partner Partne Reserved
@artner | (20byte)|| Ssstem 5 Key | Port | Port |State| =Ox000
Info) Priority | =Partner
 
MAC address | =1 [Priority] = 3
=32768
IByte Byte Byte Byte 2Byte Byte ‘Byte ‘Byte Byte
TLV #3 Collector Information
Type | Length | Value
=0x03 | =Ox10 ||(Coltector ,
(Colte- | (16byte)|| Max at
ctor Delay
Info) =0
IByte Byte Byte TaByte
TLV #4 Terminator Information
Type | Length | Value
=0x00 | =0x00
adding
(ermi- | (Obyte) =0%x0000000000.
nator
Info)
Byte IByte SOByte
Page 56
https://milestone-of-se.nesuke.com/en/nw-basic/link-aggregation/lacp-decides-active-standby/

[Figura da Pag.1] Labels: Oo nt cine Kae C7/* bs Py ot ~ o = oa aa; Reh eS ee © 7 Nie eit, oe ae at AI; + — ee Rye AR TOCr es or; 0 = es = ea f; e e ;; <P; RIN ~~ UNIVERSITA DEGLI STUDI; 2M CCO DI PERUGIA. Caption: (errore caption)
[Figura da Pag.6] Labels: Ty. Caption: (errore caption)
[Figura da Pag.6] Labels: {|. Caption: (errore caption)
[Figura da Pag.6] Labels: =. Caption: (errore caption)
[Figura da Pag.6] Caption: (errore caption)
[Figura da Pag.8] Labels: =D,. Caption: (errore caption)
[Figura da Pag.9] Caption: (errore caption)
[Figura da Pag.10] Labels: Mr f yy; aa; é F eG ee. Caption: (errore caption)
[Figura da Pag.10] Caption: (errore caption)
[Figura da Pag.10] Caption: (errore caption)
[Figura da Pag.11] Labels: x Re Zz; ‘a BA»; a; Spazio; Pie] LF Propagazione; SIIQIO™ Trasmissione; SN. tlaborazione; Instaurazione; --y- Off-hook; Ritardo; end-to-end; Dati ~~; On-hook ---}--; svincolo} | 2; 5; om- cca de ceca iawthotaeiaenes|a. Caption: (errore caption)
[Figura da Pag.12] Labels: x uM z; = ee; Spazio; Trasmissione; oo pepe aa Altes; Ifo iS; rd; Zc A, 5; 3; pit, 3; 8; @; 9; 3; 8; g Lo. Caption: (errore caption)
[Figura da Pag.13] Labels: MUX: Multiplexer; DEMUX: Demultiplexer; ——_—_—___——>; lines . . lines; 1 link, n channels. Caption: (errore caption)
[Figura da Pag.13] Labels: Multiplexing; Frequency-division Wavelength-division Time-division; multiplexing multiplexing multiplexing. Caption: (errore caption)
[Figura da Pag.14] Labels: D; Input M h Output; lines U lines; X U; Xx. Caption: (errore caption)
[Figura da Pag.14] Labels: Modulator i? _; i are; Carrier f, WE; Modulator - \ |; ZS co Ot; Modulator 1]; <=) AAA co; analog signals Carrier f5 ‘ | | | 1. Caption: (errore caption)
[Figura da Pag.16] Labels: T T T T; | I I; | A3 I A2 I Al T/3; C3; B3;A3 || C2; B2;A2 || C1; B1;A1; | B3 B2 BI Frame 3 Frame 2 Frame 1; | | H Each frame is 3 time slots.; | I I Each time slot duration is T/3 s.; ae) | C2 | C1; Data are taken from each; line every Ts.. Caption: (errore caption)
[Figura da Pag.17] Labels: 1; —}.$ J; a 2 D | 2 aa; . U}4/3)/2)1)/4)3)/2)1)4)] 34) 2 M es; =o 3 | X U | 3 =; ll 4 4 Law. Caption: (errore caption)
[Figura da Pag.18] Labels: =I). Caption: (errore caption)
[Figura da Pag.18] Labels: =I). Caption: (errore caption)
[Figura da Pag.18] Caption: (errore caption)
[Figura da Pag.19] Labels: SS. Caption: (errore caption)
[Figura da Pag.19] Labels: =. Caption: (errore caption)
[Figura da Pag.19] Labels: —s; —_. Caption: (errore caption)
[Figura da Pag.21] Labels: Sistema A Sistema B; Ges <=>; (N+ 1)-SAP (N+ 1)}SAP; (+ t)strato [ (vs tyentita fee VA DProtocelle Tvs tpentita; ==> =>; N-SAP N-SAP; N-protocollo; ===> SS>; (N=1)-SAP (N=1)-SAP; (N=1)-connessione. Caption: (errore caption)
[Figura da Pag.23] Labels: Sistema A Sistema B; a — (N+ 1)-SAP — <GaE>; —_ + pou; (N+ D-entita dF Gj protocalio peer-to-peer LN + D-entita; —_ J wspu; GERD w-sap -—— i Gimp; N-primitive 1 i N-primitive; 5 NPC] N-PDU ;; <> (N-1)-SAP — Gaim. Caption: (errore caption)
[Figura da Pag.24] Labels: “cS '&; 4; __—— Informazioni; utente; Y; P-PDU; v; S-PDU; Y; T-PDU; v; N-PDU; Y; DL-PDU; (). Caption: (errore caption)
[Figura da Pag.29] Labels: >. Caption: (errore caption)
[Figura da Pag.29] Caption: (errore caption)
[Figura da Pag.30] Labels: ry. Caption: (errore caption)
[Figura da Pag.30] Labels: si. Caption: (errore caption)
[Figura da Pag.31] Labels: _ ik. Caption: (errore caption)
[Figura da Pag.31] Labels: <. Caption: (errore caption)
[Figura da Pag.31] Caption: (errore caption)
[Figura da Pag.31] Labels: >» 3; >; a. Caption: (errore caption)
[Figura da Pag.31] Caption: (errore caption)
[Figura da Pag.31] Caption: (errore caption)
[Figura da Pag.32] Caption: (errore caption)
[Figura da Pag.32] Labels: IHN AU. Caption: (errore caption)
[Figura da Pag.33] Labels: >. Caption: (errore caption)
[Figura da Pag.33] Caption: (errore caption)
[Figura da Pag.34] Labels: fo. Caption: (errore caption)
[Figura da Pag.34] Labels: |. Caption: (errore caption)
[Figura da Pag.34] Labels: |. Caption: (errore caption)
[Figura da Pag.34] Caption: (errore caption)
[Figura da Pag.34] Labels: .COM; INN THM. Caption: (errore caption)
[Figura da Pag.34] Labels: |. Caption: (errore caption)
[Figura da Pag.34] Labels: |. Caption: (errore caption)
[Figura da Pag.34] Labels: [. Caption: (errore caption)
[Figura da Pag.34] Labels: [|. Caption: (errore caption)
[Figura da Pag.34] Labels: |. Caption: (errore caption)
[Figura da Pag.34] Labels: [sd. Caption: (errore caption)
[Figura da Pag.34] Labels: [sd. Caption: (errore caption)
[Figura da Pag.34] Labels: f. Caption: (errore caption)
[Figura da Pag.35] Labels: @|/E|U) Al) P|) RSE; Wi/C;R/|C;S|S]¥]T; R|E|G)K{|H|T|N/|N. Caption: (errore caption)
[Figura da Pag.38] Labels: a. Caption: (errore caption)
[Figura da Pag.38] Labels: Po. Caption: (errore caption)
[Figura da Pag.38] Labels: ae. Caption: (errore caption)
[Figura da Pag.38] Labels: PF. Caption: (errore caption)
[Figura da Pag.38] Labels: P|. Caption: (errore caption)
[Figura da Pag.38] Labels: Po. Caption: (errore caption)
[Figura da Pag.38] Labels: lk. Caption: (errore caption)
[Figura da Pag.38] Labels: _|k. Caption: (errore caption)
[Figura da Pag.38] Labels: _. Caption: (errore caption)
[Figura da Pag.39] Labels: p. Caption: (errore caption)
[Figura da Pag.39] Labels: p. Caption: (errore caption)
[Figura da Pag.39] Labels: (i. Caption: (errore caption)
[Figura da Pag.39] Labels: |__|. Caption: (errore caption)
[Figura da Pag.39] Caption: (errore caption)
[Figura da Pag.39] Labels: _|k. Caption: (errore caption)
[Figura da Pag.39] Labels: ee. Caption: (errore caption)
[Figura da Pag.39] Labels: pe. Caption: (errore caption)
[Figura da Pag.39] Labels: ||. Caption: (errore caption)
[Figura da Pag.39] Labels: |. Caption: (errore caption)
[Figura da Pag.39] Labels: =. Caption: (errore caption)
[Figura da Pag.39] Labels: | |. Caption: (errore caption)
[Figura da Pag.39] Labels: P|. Caption: (errore caption)
[Figura da Pag.39] Labels: i. Caption: (errore caption)
[Figura da Pag.39] Labels: ||. Caption: (errore caption)
[Figura da Pag.40] Labels: _|k. Caption: (errore caption)
[Figura da Pag.40] Labels: _|k. Caption: (errore caption)
[Figura da Pag.41] Labels: _|k. Caption: (errore caption)
[Figura da Pag.41] Caption: (errore caption)
[Figura da Pag.41] Labels: q— RevWindow —»; Yj),; data from en [S27 application; - spare room ee eee; is Yy Y; 4———_ RevBuffee —————4}. Caption: (errore caption)
[Figura da Pag.45] Labels: send_base  nexiseqnum already usable, not; | | ack’ed yet sent; QUPNDN 11), TTTIVYDOUUDUD | sersaeca — noresobe; 4_ window size——*; N. Caption: (errore caption)
[Figura da Pag.48] Labels: 13; gq; $ i; & 10; g a threshold; BA 8 ne ee; g o7; =; & 5; sf 4; 2 3; 8 2; 1; 01234567 8 91011121314; a oe. Caption: (errore caption)
[Figura da Pag.49] Labels: fo. Caption: (errore caption)
[Figura da Pag.49] Caption: (errore caption)
[Figura da Pag.49] Labels: f. Caption: (errore caption)
[Figura da Pag.49] Labels: |. Caption: (errore caption)
[Figura da Pag.49] Labels: |. Caption: (errore caption)
[Figura da Pag.49] Labels: a. Caption: (errore caption)
[Figura da Pag.49] Labels: fo. Caption: (errore caption)
[Figura da Pag.49] Labels: |. Caption: (errore caption)
[Figura da Pag.49] Labels: ia. Caption: (errore caption)
[Figura da Pag.49] Labels: Po. Caption: (errore caption)
[Figura da Pag.49] Labels: _. Caption: (errore caption)
[Figura da Pag.49] Labels: P. Caption: (errore caption)
[Figura da Pag.49] Caption: (errore caption)
[Figura da Pag.50] Labels: ». Caption: (errore caption)
[Figura da Pag.50] Caption: (errore caption)
[Figura da Pag.51] Caption: (errore caption)
[Figura da Pag.51] Labels: LL. Caption: (errore caption)
[Figura da Pag.51] Labels: Sead fllac fart stun Aoetinca SAY. Caption: (errore caption)
[Figura da Pag.51] Labels: c- —. Caption: (errore caption)
[Figura da Pag.51] Caption: (errore caption)
[Figura da Pag.51] Caption: (errore caption)
[Figura da Pag.51] Caption: (errore caption)
[Figura da Pag.51] Caption: (errore caption)
[Figura da Pag.51] Caption: (errore caption)
[Figura da Pag.51] Labels: ik. Caption: (errore caption)
[Figura da Pag.51] Caption: (errore caption)
[Figura da Pag.51] Labels: Po. Caption: (errore caption)
[Figura da Pag.52] Labels: >. Caption: (errore caption)
[Figura da Pag.52] Caption: (errore caption)
[Figura da Pag.53] Labels: _kk. Caption: (errore caption)
[Figura da Pag.53] Labels: —; f=]. Caption: (errore caption)
[Figura da Pag.53] Labels: lk. Caption: (errore caption)
[Figura da Pag.53] Labels: —>; k=]. Caption: (errore caption)
[Figura da Pag.53] Caption: (errore caption)
[Figura da Pag.53] Labels: Chk. Caption: (errore caption)
[Figura da Pag.53] Labels: _|k. Caption: (errore caption)
[Figura da Pag.53] Caption: (errore caption)
[Figura da Pag.54] Labels: >. Caption: (errore caption)
[Figura da Pag.54] Caption: (errore caption)
[Figura da Pag.55] Labels: Ss. Caption: (errore caption)
[Figura da Pag.55] Labels: —. Caption: (errore caption)
[Figura da Pag.55] Labels: Cc). Caption: (errore caption)
[Figura da Pag.55] Labels: aa. Caption: (errore caption)
[Figura da Pag.55] Caption: (errore caption)
[Figura da Pag.55] Labels: Cr. Caption: (errore caption)
[Figura da Pag.55] Labels: we ERR); 9. Caption: (errore caption)
[Figura da Pag.57] Caption: (errore caption)
[Figura da Pag.57] Caption: (errore caption)
[Figura da Pag.57] Caption: (errore caption)
[Figura da Pag.57] Caption: (errore caption)
[Figura da Pag.57] Caption: (errore caption)
[Figura da Pag.57] Caption: (errore caption)
[Figura da Pag.57] Caption: (errore caption)
[Figura da Pag.57] Caption: (errore caption)
[Figura da Pag.57] Caption: (errore caption)
[Figura da Pag.57] Labels: ~y. Caption: (errore caption)
[Figura da Pag.57] Caption: (errore caption)
[Figura da Pag.58] Caption: (errore caption)
[Figura da Pag.58] Caption: (errore caption)
[Figura da Pag.58] Labels: &. Caption: (errore caption)
[Figura da Pag.58] Labels: "s). Caption: (errore caption)
[Figura da Pag.59] Labels: -COM; MUNI AUNII. Caption: (errore caption)
[Figura da Pag.59] Caption: (errore caption)
[Figura da Pag.59] Caption: (errore caption)
[Figura da Pag.59] Caption: (errore caption)
[Figura da Pag.59] Caption: (errore caption)
[Figura da Pag.59] Caption: (errore caption)
[Figura da Pag.59] Caption: (errore caption)
[Figura da Pag.59] Caption: (errore caption)
[Figura da Pag.59] Caption: (errore caption)
[Figura da Pag.60] Labels: Slow Protocol Frame Format; sByte Byte GByte Byte WrielBvte 47~110Byte 4Byte; Destination Ether [sub fac; Source | Tyre feet] Data; Preamble | MAC address ype pipe FCS; ona0:e200-0002 | MAC address | F Lalesn| GLY); LACE Data Field Format; TLV #l Actor Information; Type | Lensth [Value; iin | Ont setoe | Aor ~~ Astor [At | Actor [Acer] Revered; Actor | 20b¥¢2) | system System Key | Port | Port [State] 03000; Info) Priority | =ActorMACaddress | =2 Priority] -1 [Ox3d; 52168 32168; ie ae aa an i eee; TLV #2 Partner Information; Type | Length [Value; ZOx02 | ~Osl4 | Parner Partner Partner | Partner | Partner Partne)] Reserved; arta | 20byt2 | system System Key | Port | Port [State] 03000; Info) Priority |=Partner MAC address | =1 Priority] =66 -Ox3d; 32168 32168; ia ae a eT; TLV #3 Collector Information; Type | Leneth [Value; =On03 | =Or10 | Cotectr a; (Colle. |(A6byte)|] Max saat; ctor Delay; Info) 0; iar Tae; TLV #4 Terminator Information; Type | Leneth; =Ox00 | =0x00; Padding; Temi | Oye 070000000000.; Info); ora Sa. Caption: (errore caption)